import './svgBlob.svelte.css.proxy.js';
/* src/ui/svgBlob.svelte generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	init,
	insert,
	noop,
	safe_not_equal,
	svg_element,
	toggle_class
} from "../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let svg;
	let g;
	let circle0;
	let circle1;
	let circle2;
	let circle3;
	let circle4;
	let circle5;
	let circle6;
	let circle7;
	let defs;
	let filter;
	let feGaussianBlur;
	let feColorMatrix;

	return {
		c() {
			svg = svg_element("svg");
			g = svg_element("g");
			circle0 = svg_element("circle");
			circle1 = svg_element("circle");
			circle2 = svg_element("circle");
			circle3 = svg_element("circle");
			circle4 = svg_element("circle");
			circle5 = svg_element("circle");
			circle6 = svg_element("circle");
			circle7 = svg_element("circle");
			defs = svg_element("defs");
			filter = svg_element("filter");
			feGaussianBlur = svg_element("feGaussianBlur");
			feColorMatrix = svg_element("feColorMatrix");
			attr(circle0, "id", "circle1");
			attr(circle0, "cx", "328");
			attr(circle0, "cy", "304");
			attr(circle0, "r", "174");
			attr(circle0, "fill", /*fill*/ ctx[1]);
			attr(circle0, "class", "svelte-ialess");
			attr(circle1, "id", "circle2");
			attr(circle1, "class", "main svelte-ialess");
			attr(circle1, "cx", "120.5");
			attr(circle1, "cy", "405.5");
			attr(circle1, "r", "90");
			attr(circle1, "fill", /*fill*/ ctx[1]);
			attr(circle2, "id", "circle2_3");
			attr(circle2, "class", "filler svelte-ialess");
			attr(circle2, "cx", "120.5");
			attr(circle2, "cy", "337.5");
			attr(circle2, "r", "76.5");
			attr(circle2, "fill", /*fill*/ ctx[1]);
			attr(circle3, "id", "circle3");
			attr(circle3, "class", "main svelte-ialess");
			attr(circle3, "cx", "88.5");
			attr(circle3, "cy", "234.5");
			attr(circle3, "r", "90");
			attr(circle3, "fill", /*fill*/ ctx[1]);
			attr(circle4, "id", "circle3_4");
			attr(circle4, "class", "filler svelte-ialess");
			attr(circle4, "cx", "175.52");
			attr(circle4, "cy", "180.5");
			attr(circle4, "r", "76.5");
			attr(circle4, "fill", /*fill*/ ctx[1]);
			attr(circle5, "id", "circle4");
			attr(circle5, "class", "main svelte-ialess");
			attr(circle5, "cx", "210.5");
			attr(circle5, "cy", "92.5");
			attr(circle5, "r", "90");
			attr(circle5, "fill", /*fill*/ ctx[1]);
			attr(circle6, "id", "circle4_5");
			attr(circle6, "class", "filler svelte-ialess");
			attr(circle6, "cx", "304.52");
			attr(circle6, "cy", "119.5");
			attr(circle6, "r", "76.5");
			attr(circle6, "fill", /*fill*/ ctx[1]);
			attr(circle7, "id", "circle5");
			attr(circle7, "class", "main svelte-ialess");
			attr(circle7, "cx", "398.5");
			attr(circle7, "cy", "88.5");
			attr(circle7, "r", "90");
			attr(circle7, "fill", /*fill*/ ctx[1]);
			attr(g, "filter", "url(#filter0_b)");
			attr(feGaussianBlur, "in", "SourceGraphic");
			attr(feGaussianBlur, "stdDeviation", "24.5");
			attr(feGaussianBlur, "result", "blur");
			attr(feColorMatrix, "id", "colorMatrixElement");
			attr(feColorMatrix, "in", "blur");
			attr(feColorMatrix, "mode", "matrix");
			attr(feColorMatrix, "values", "1 0 0 0 0 \n                                                                         0 1 0 0 0 \n                                                                         0 0 1 0 0 \n                                                                         0 0 0 25 -15");
			attr(feColorMatrix, "result", "matrix");
			attr(filter, "id", "filter0_b");
			attr(filter, "x", "-49");
			attr(filter, "y", "-49");
			attr(filter, "width", "600");
			attr(filter, "height", "592");
			attr(filter, "filterUnits", "userSpaceOnUse");
			attr(filter, "color-interpolation-filters", "sRGB");
			attr(svg, "width", "502");
			attr(svg, "height", "494");
			attr(svg, "viewBox", "0 0 502 494");
			attr(svg, "fill", "none");
			attr(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr(svg, "class", "svelte-ialess");
			toggle_class(svg, "hide", /*hide*/ ctx[0]);
		},
		m(target, anchor) {
			insert(target, svg, anchor);
			append(svg, g);
			append(g, circle0);
			append(g, circle1);
			append(g, circle2);
			append(g, circle3);
			append(g, circle4);
			append(g, circle5);
			append(g, circle6);
			append(g, circle7);
			append(svg, defs);
			append(defs, filter);
			append(filter, feGaussianBlur);
			append(filter, feColorMatrix);
		},
		p(ctx, [dirty]) {
			if (dirty & /*fill*/ 2) {
				attr(circle0, "fill", /*fill*/ ctx[1]);
			}

			if (dirty & /*fill*/ 2) {
				attr(circle1, "fill", /*fill*/ ctx[1]);
			}

			if (dirty & /*fill*/ 2) {
				attr(circle2, "fill", /*fill*/ ctx[1]);
			}

			if (dirty & /*fill*/ 2) {
				attr(circle3, "fill", /*fill*/ ctx[1]);
			}

			if (dirty & /*fill*/ 2) {
				attr(circle4, "fill", /*fill*/ ctx[1]);
			}

			if (dirty & /*fill*/ 2) {
				attr(circle5, "fill", /*fill*/ ctx[1]);
			}

			if (dirty & /*fill*/ 2) {
				attr(circle6, "fill", /*fill*/ ctx[1]);
			}

			if (dirty & /*fill*/ 2) {
				attr(circle7, "fill", /*fill*/ ctx[1]);
			}

			if (dirty & /*hide*/ 1) {
				toggle_class(svg, "hide", /*hide*/ ctx[0]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(svg);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { hide = false } = $$props;
	let { fill = "#2E525F" } = $$props;

	$$self.$$set = $$props => {
		if ("hide" in $$props) $$invalidate(0, hide = $$props.hide);
		if ("fill" in $$props) $$invalidate(1, fill = $$props.fill);
	};

	return [hide, fill];
}

class SvgBlob extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { hide: 0, fill: 1 });
	}
}

export default SvgBlob;