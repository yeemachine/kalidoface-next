/* src/tracking/smoothFriend.svelte generated by Svelte v3.38.3 */
import { SvelteComponent, init, safe_not_equal } from "../../_snowpack/pkg/svelte/internal.js";

import { get } from "../../_snowpack/pkg/svelte/store.js";
import { profiles } from "../scene/profiles.svelte.js";
import faceMap, { stabilizeBlink } from "../utils/faceMap/index.js";

//Takes predicted values, smoothes, and updates profile object
import { spring } from "../../_snowpack/pkg/svelte/motion.js";

let friend_smooth_face = spring(
	{
		eye: { l: 1, r: 1 },
		mouth: {
			x: 0,
			y: 0,
			shape: { A: 0, E: 0, I: 0, O: 0, U: 0 }
		},
		head: { x: 0, y: 0, z: 0 },
		brow: 0,
		pupil: { x: 0, y: 0 }
	},
	{
		stiffness: 0.15,
		damping: 0.7,
		precision: 0.01
	}
);

friend_smooth_face.subscribe(val => {
	if (val && profiles) {
		const face = get(profiles).friend.tracking.face;
		face.head.x = val.head.x;
		face.head.y = val.head.y;
		face.head.z = val.head.z;

		if (val.head.x >= -29 && val.head.x <= 29 && val.head.y >= -29 && val.head.y <= 29) {
			face.brow = val.brow;
			face.pupil = val.pupil;
			face.eye = stabilizeBlink(val.eye, val.head.x);
			face.mouth = val.mouth;
		}
	}
});

let friend_smooth_pose = spring(
	{
		RightUpperArm: { x: 0, y: 0, z: 0.55 * 180 },
		LeftUpperArm: { x: 0, y: 0, z: 0.55 * 180 }, //y: 0 > -.5 // z: -.5>.5
		RightLowerArm: { x: 0, y: 0, z: 0 },
		LeftLowerArm: { x: 0, y: 0, z: 0 }, //x: 0 > -4, z: 0 to -.9
		// LeftUpperLeg:{x:0,y:0,z:0},
		// RightUpperLeg:{x:0,y:0,z:0},
		// RightLowerLeg:{x:0,y:0,z:0},
		// LeftLowerLeg:{x:0,y:0,z:0},
		LeftHand: { x: 0, y: 0, z: 0 },
		RightHand: { x: 0, y: 0, z: 0 },
		Spine: { x: 0, y: 0, z: 0 },
		Hips: {
			position: { x: 0, y: 0, z: 0 },
			rotation: { x: 0, y: 0, z: 0 }
		}
	},
	{
		stiffness: 0.05,
		damping: 0.9,
		precision: 0.01
	}
);

class SmoothFriend extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, null, safe_not_equal, {});
	}
}

export default SmoothFriend;
export { friend_smooth_face, friend_smooth_pose };